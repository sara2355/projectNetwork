import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

public class NewServer {
    // قائمة اللاعبين المتصلين
    private static List<NewClinet> connectedPlayers = new ArrayList<>();
    // قائمة اللاعبين في غرفة الانتظار
    private static List<NewClinet> waitingRoom = new ArrayList<>();

    private static final int MAX_PLAYERS_PER_ROOM = 4;

    public static void main(String[] args) throws IOException {
        ServerSocket serverSocket = new ServerSocket(9090);
        System.out.println("Server started...");

        while (true) {
            System.out.println("Waiting for client connection...");
            Socket clientSocket = serverSocket.accept();
            System.out.println("Connected to client");

            NewClinet clientThread = new NewClinet(clientSocket);
            handlePlayerConnection(clientThread);
        }
    }

    // عند اتصال لاعب جديد (Connect)
    public static synchronized void handlePlayerConnection(NewClinet client) {
        connectedPlayers.add(client);
        new Thread(client).start();
        // نرسل رسالة تأكيد اتصال للعميل نفسه
        client.sendMessage("CONNECTED " + client.getUsername());
        // تحديث قائمة اللاعبين لجميع العملاء
        sendConnectedPlayersListToAll();
    }

    // عند استقبال رسالة "play" من العميل (Pair Request)
    public static synchronized void handlePlayRequest(NewClinet client) {
        if (waitingRoom.size() < MAX_PLAYERS_PER_ROOM) {
            if (!waitingRoom.contains(client)) {
                waitingRoom.add(client);
            }
            sendWaitingRoomListToAll();
        } else {
            client.sendMessage("Room is full. Please wait...");
        }
    }

    // إرسال قائمة اللاعبين المتصلين لجميع العملاء
    public static synchronized void sendConnectedPlayersListToAll() {
        StringBuilder sb = new StringBuilder("PLAYERS: ");
        for (NewClinet player : connectedPlayers) {
            sb.append(player.getUsername()).append(",");
        }
        if (sb.length() > 0) {
            sb.setLength(sb.length() - 1);
        }
        String msg = sb.toString();
        for (NewClinet player : connectedPlayers) {
            player.sendMessage(msg);
        }
    }

    // إرسال قائمة غرفة الانتظار لجميع العملاء
    public static synchronized void sendWaitingRoomListToAll() {
        StringBuilder sb = new StringBuilder("WAITING ROOM: ");
        for (NewClinet player : waitingRoom) {
            sb.append(player.getUsername()).append(",");
        }
        if (sb.length() > 0) {
            sb.setLength(sb.length() - 1);
        }
        String msg = sb.toString();
        // هنا نرسل الرسالة لجميع اللاعبين المتصلين حتى يحدّثوا نوافذهم
        for (NewClinet player : connectedPlayers) {
            player.sendMessage(msg);
        }
    }

    // إزالة اللاعب عند انقطاع الاتصال
    public static synchronized void removePlayer(NewClinet client) {
        connectedPlayers.remove(client);
        waitingRoom.remove(client);
        notifyAllPlayers("Player left: " + client.getUsername());
        sendConnectedPlayersListToAll();
        sendWaitingRoomListToAll();
    }

    // إرسال رسالة نصية للجميع
    public static void notifyAllPlayers(String message) {
        for (NewClinet player : connectedPlayers) {
            player.sendMessage(message);
        }
    }
}
